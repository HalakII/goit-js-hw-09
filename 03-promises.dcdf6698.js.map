{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAqCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CA5CEQ,SAASC,cAAc,SAG/BC,iBAAiB,UAExB,SAAyBC,GACvBA,EAAMC,iBAEN,MAAQZ,MAAAa,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAMK,cAAcC,SAE9CC,EAAYC,OAAON,EAAMO,OACzBC,EAAWF,OAAOL,EAAKM,OACvBE,EAAaH,OAAOJ,EAAOK,OACjC,GAAIF,EAAY,GAAKG,EAAW,GAAKC,EAAa,EAChDC,EAAA3B,GAAS4B,OAAOC,QAAQ,yCAEtB,IAAG,IAAIC,EAAI,EAAGA,GAAKJ,EAAYI,GAAK,EAAG,CACvC,IAAIC,EAAWD,EAAI,EAGnB5B,EAAc6B,EAFCT,EAAYG,EAAWM,GAGnCC,MAAK,EAAC7B,SAAEA,EAAQC,MAAEA,MACjBuB,EAAA3B,GAAS4B,OAAOK,QACd,uBAAqB9B,QAAiBC,MAAU,IAGnD8B,OAAM,EAAC/B,SAAEA,EAAQC,MAAEA,MAClBuB,EAAA3B,GAAS4B,OAAOO,QACd,sBAAoBhC,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\n// console.dir(formEl[0]);\n\nformEl.addEventListener('submit', onPromiseCreate);\n\nfunction onPromiseCreate(event) {\n  event.preventDefault();\n\n  const { delay, step, amount } = event.currentTarget.elements;\n\n  const dataDelay = Number(delay.value);\n  const dataStep = Number(step.value);\n  const dataAmount = Number(amount.value);\n  if (dataDelay < 0 || dataStep < 0 || dataAmount < 0) {\n    Notiflix.Notify.warning(`❗ Please enter a positive number`);\n  } else {\n    for (let i = 0; i <= dataAmount; i += 1) {\n      let position = i + 1;\n      let delaySum = dataDelay + dataStep * position;\n\n      createPromise(position, delaySum)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`\n          );\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${delay}ms`\n          );\n        });\n    }\n  }\n  // event.currentTarget.reset();\n}\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","delay1","step","amount","currentTarget","elements","dataDelay","Number","value","dataStep","dataAmount","$parcel$interopDefault","Notify","warning","i","position1","then","success","catch","failure"],"version":3,"file":"03-promises.dcdf6698.js.map"}